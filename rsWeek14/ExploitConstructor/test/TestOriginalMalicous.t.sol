// SPDX-License-Identifier: MIT
pragma solidity 0.8.17;

import "forge-std/Test.sol";
import "contracts/OriginalMalicious.sol";

contract ContractOriginalMalicous is Test {
    Original original;
    Malicous malicious;

    function setUp() public {
        original = new Original(
            hex"6080604052348015600f57600080fd5b506004361060285760003560e01c8063b4ba349f14602d575b600080fd5b60336047565b604051603e91906067565b60405180910390f35b60606040518060600160405280603381526020016100b460339139905090565b600060208083528351808285015260005b818110156092578581018301518582016040015282016078565b506000604082860101526040601f19601f830116850101925050509291505056fe53756464656e746c792074686520636f6e747261637420646f6573206e6f742062656861766520617320492065787065637421a26469706673582212200b8c49f593c203518d432e449ef48a289bee0d923d114fbd387190648c65a75f64736f6c63430008110033"
        );
        malicious = new Malicous();
    }

    function testByteCode() public {
        bytes memory malicousRuntimeBytecode = vm.getDeployedCode("OriginalMalicious.sol:Malicous");
        uint256 malicousLength = malicousRuntimeBytecode.length;
        console.logBytes(malicousRuntimeBytecode);
        console.log("malicousLength: ", malicousLength);
    }

    function testWrongCode() public {
        string memory sing = original.sing();
        console.log("sing: ", sing);
    }

    function testOriginalDeployment() public {
        Original original = new Original(hex"89898989898989898989");
    }
}
